LOAD_CONST 0x01 0  # Адрес начала первого вектора
LOAD_CONST 0x02 5  # Адрес начала второго вектора
LOAD_CONST 0x03 10 # Адрес для результата
LOAD_CONST 0x04 5  # Длина векторов

# Цикл по элементам векторов
LOAD_CONST 0x05 0      # Счётчик i
LOOP_START:
READ_MEM 0x06 [0x01+0x05] # Читаем элемент из первого вектора
READ_MEM 0x07 [0x02+0x05] # Читаем элемент из второго вектора
BITWISE_SHIFT_RIGHT 0x08 [0x06+0x07] # Выполняем побитовый циклический сдвиг
WRITE_MEM 0x03 [0x08+0x05] # Записываем результат в вектор результата
INC 0x05                 # Увеличиваем счётчик
CMP 0x05 0x04            # Проверяем, не достигнут ли конец векторов
JLT LOOP_START           # Если нет, продолжаем цикл

HALT
LOAD_CONST 0x0C 34
READ_MEM 0xB6 570
WRITE_MEM 0x71 878
BITWISE_SHIFT_RIGHT 0xC5 725
